<File version="2.1">
  <FileID>7e922498-7af2-4b39-a173-acbc6ecaf9ce</FileID>
  <Preview>iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAABXASURBVHhe7d3Zj57nfd9hA4aPe1i06EEDNECB
/gc9VHLSIEaB5ig9sV3URpEasYEYBYoCjS1LTeG6lq3Clq1IlmXFkriK4pAznH3f933I4XBmuA0X
cZcqBar8630/Q7KUK1qULDFiftcHuMCR5n2feYc6uL/PO5P4c5IkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSdIn0NNf+MIX
+v/wD/+g/zvfeaL/29W3HwcAHiGPP/5k/7e+9a3+f/yP/mF/Odur397nP//5qa997T/Esf6JWNh8
I5a3r8bS1hUA4BGyUs7vufXz8fMXX47f//1/FreP+fv3B4891t/WNxETJy5Fz/TJYv32nwDAo2M9
+mY3y838lfjuk3/14QOgvmVQ7/r7ZjeiHwB4pE2euBgdPcMfPgCeeOLJ/vVzN5sBMDC/CQB/P82d
isGFzRhZPh2jH1N97mC5VjWy9MGPeVBDC1vN6xpe2v7Azz+oocVynfK93fk+p09eitaO/g8fAPUX
/06cu1GetNW8mLsW60VvWzr7fvXf3ftYAPiMG17cjv6ZjTjQPhl7W8djb9tHVJ5Tn1vvsofKQfta
10zs+ZjX2dc2ET2TJ2KkvKaWvvnYc3Tsgx/729SvXXSMrjbf253vc2bjchkAfQ82ANbP3yyraLu5
wB2D0ysxOLkUg1PLMTC5HH1j09E7OhP9E4sxNLdeFsvp9z3+d1Kv9UleDwB+w9jq2ebAbOmejs7R
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
/dlLN+LWzetx4wYA8Fl3s7h27XqsnbvZ3Mh/7AFwpgyAerHr1wGAz7obxVUDAAByMQAAICEDAAAS
MgAAICEDAAASMgAAICEDAAASMgAAICEDAAASMgAAICEDAAASMgAAICEDAAASMgAAICEDAAASMgAA
ICEDAAASMgAAICEDAAASMgAAICEDAAASMgAAICEDAAASMgAAICEDAAASMgAAICEDAAASMgAAICED
AAASMgAAIKFPfQBcu3Ytbt68Ge+99168++67AMBDVM/feg7X8/je8/lTHwBvvvlmnDlzJr7+9a/H
N7/5zfjGN74BADwE9dyt5289h+t5fO/5/KkPgHfeeSdmZ2fji1/8YrzwwgvxzDPPAAAPQT136/lb
z+F6Ht97Pn/qA+Dtt9+Oubm5+PKXvxytra1x8OBBAOAhqOduPX/rOVzP43vP54c2AL70pS9FS0tL
7Nu3DwB4COq5W89fAwAAEjEAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAh
AwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAA
EjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIA
ACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAh
AwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAA
EjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIA
ACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAh
AwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAA
EjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIA
ACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAh
AwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAA
EjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIA
ACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAh
AwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAA
EjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIA
ACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAh
AwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAA
EjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIA
ACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAh
AwAAEjIAACAhAwAAEjIAACAhAwAAEjIAACAhAwAAEvo7HwAzMzPxla98Jbq7u+PIkSMAwENQz916
/tZz+O9kAKytrcVjjz0WX/3qV5sXAgB8+uq5W8/feg4/9AFw48aN5s/l5eWYnJyMqakpAOAhqOdu
PX/vPY/vns/FpzoAmi9SvmhdHgDAw/ebh39zNhef+gAAAD5bDAAASMgAAICEPtEBcKsMgHpBAOCz
7WZx7ZMYAKcv7v6CQV0TAMBnWz3837j6Ow6A1fLEtapcBAB4dNQzvPrYA6CqCwIAeHR85AHw3e8+
MXDr11GeUP0aAHiEXX03on948sMHwJ//+TfGB0emyloYahYDAPDo6huajOdfeOnDB4AkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZL0W/vc5/4vxHvCFz7nENoAAAAASUVORK5CYII=</Preview>
  <Object type="System.Windows.Forms.Form, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="MainForm" children="Controls">
    <Property name="AutoScaleDimensions">6, 13</Property>
    <Property name="AutoScaleMode">Font</Property>
    <Property name="ClientSize">927, 546</Property>
    <Property name="Name">MainForm</Property>
    <Property name="StartPosition">CenterScreen</Property>
    <Property name="Text">Main Form</Property>
    <Event name="Load">MainForm_Load</Event>
    <Object type="System.Windows.Forms.DataGridView, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="datagridview1" children="Controls">
      <Property name="ColumnHeadersHeightSizeMode">AutoSize</Property>
      <Property name="ContextMenuStrip">
        <Reference name="contextmenustrip1" />
      </Property>
      <Property name="Location">14, 63</Property>
      <Property name="MultiSelect">False</Property>
      <Property name="Name">datagridview1</Property>
      <Property name="ReadOnly">True</Property>
      <Property name="SelectionMode">FullRowSelect</Property>
      <Property name="Size">900, 470</Property>
      <Property name="TabIndex">0</Property>
    </Object>
  </Object>
  <Object type="System.Windows.Forms.ContextMenuStrip, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="contextmenustrip1" children="Controls">
    <Property name="Items">
      <Item type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
        <Reference name="shadowToolStripMenuItem" />
      </Item>
      <Item type="System.Windows.Forms.ToolStripSeparator, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
        <Reference name="toolstripseparator1" />
      </Item>
      <Item type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
        <Reference name="kickToolStripMenuItem" />
      </Item>
    </Property>
    <Property name="Name">contextmenustrip1</Property>
    <Property name="Size">117, 54</Property>
  </Object>
  <Object type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="shadowToolStripMenuItem">
    <Property name="Name">shadowToolStripMenuItem</Property>
    <Property name="Size">116, 22</Property>
    <Property name="Text">Shadow</Property>
    <Event name="Click">shadowToolStripMenuItem_Click</Event>
  </Object>
  <Object type="System.Windows.Forms.ToolStripSeparator, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="toolstripseparator1">
    <Property name="Name">toolstripseparator1</Property>
    <Property name="Size">113, 6</Property>
  </Object>
  <Object type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="kickToolStripMenuItem">
    <Property name="Name">kickToolStripMenuItem</Property>
    <Property name="Size">116, 22</Property>
    <Property name="Text">Kick</Property>
    <Event name="Click">kickToolStripMenuItem_Click</Event>
  </Object>
  <Object type="System.Windows.Forms.Timer, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="timer1">
    <Property name="Enabled">True</Property>
    <Property name="Interval">1000</Property>
  </Object>
  <Code><![CDATA[
$MainForm_Load={
#TODO: Initialize Form Controls here
	
	[pscustomobject]$output = @()
	
	Refresh-Grid
	
	$RDSusers = get-rdusersession -connectionbroker "rds-cb-wa.ad.humboldt.edu" | where-object { $_.CollectionName -match "ITS*" }
	
	foreach ($user in $RDSusers)
	{
		
		$tempUser = get-aduser $user.UserName -Properties DisplayName
		
		$singleUser = [pscustomobject]@{
			
			UserName	 = $user.UserName
			FullName	 = $tempUser.DisplayName
			LogOnTime    = $user.CreateTime
			SessionState = $user.SessionState
			HostServer   = $user.HostServer
			SessionID    = $user.UnifiedSessionId
			
		}
		
		$output += $singleUser
		
	}
	
	
	$outputConverted = ConvertTo-DataTable -InputObject $output
	
	Update-DataGridView -DataGridView $datagridview1 -Item $outputConverted
	
}

$buttonCallChildForm_Click={
	#TODO: Place custom script here
	if((Show-ChildForm_psf) -eq 'OK')
	{
		
	}
}

#region Control Helper Functions
function Update-DataGridView
{
	<#
	.SYNOPSIS
		This functions helps you load items into a DataGridView.

	.DESCRIPTION
		Use this function to dynamically load items into the DataGridView control.

	.PARAMETER  DataGridView
		The DataGridView control you want to add items to.

	.PARAMETER  Item
		The object or objects you wish to load into the DataGridView's items collection.
	
	.PARAMETER  DataMember
		Sets the name of the list or table in the data source for which the DataGridView is displaying data.

	.PARAMETER AutoSizeColumns
	    Resizes DataGridView control's columns after loading the items.
	#>
	Param (
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		[System.Windows.Forms.DataGridView]$DataGridView,
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		$Item,
	    [Parameter(Mandatory=$false)]
		[string]$DataMember,
		[System.Windows.Forms.DataGridViewAutoSizeColumnMode]$AutoSizeColumns = 'None'
	)
	$DataGridView.SuspendLayout()
	$DataGridView.DataMember = $DataMember
	
	if ($Item -is [System.Data.DataSet] -and $Item.Tables.Count -gt 0)
	{
		$DataGridView.DataSource = $Item.Tables[0]
	}
	elseif ($Item -is [System.ComponentModel.IListSource]`
	-or $Item -is [System.ComponentModel.IBindingList] -or $Item -is [System.ComponentModel.IBindingListView] )
	{
		$DataGridView.DataSource = $Item
	}
	else
	{
		$array = New-Object System.Collections.ArrayList
		
		if ($Item -is [System.Collections.IList])
		{
			$array.AddRange($Item)
		}
		else
		{
			$array.Add($Item)
		}
		$DataGridView.DataSource = $array
	}
	
	if ($AutoSizeColumns -ne 'None')
	{
		$DataGridView.AutoResizeColumns($AutoSizeColumns)
	}
	
	$DataGridView.ResumeLayout()
}

function ConvertTo-DataTable
{
	<#
		.SYNOPSIS
			Converts objects into a DataTable.
	
		.DESCRIPTION
			Converts objects into a DataTable, which are used for DataBinding.
	
		.PARAMETER  InputObject
			The input to convert into a DataTable.
	
		.PARAMETER  Table
			The DataTable you wish to load the input into.
	
		.PARAMETER RetainColumns
			This switch tells the function to keep the DataTable's existing columns.
		
		.PARAMETER FilterWMIProperties
			This switch removes WMI properties that start with an underline.
	
		.EXAMPLE
			$DataTable = ConvertTo-DataTable -InputObject (Get-Process)
	#>
	[OutputType([System.Data.DataTable])]
	param(
	[ValidateNotNull()]
	$InputObject, 
	[ValidateNotNull()]
	[System.Data.DataTable]$Table,
	[switch]$RetainColumns,
	[switch]$FilterWMIProperties)
	
	if($null -eq $Table)
	{
		$Table = New-Object System.Data.DataTable
	}
	
	if ($InputObject -is [System.Data.DataTable])
	{
		$Table = $InputObject
	}
	elseif ($InputObject -is [System.Data.DataSet] -and $InputObject.Tables.Count -gt 0)
	{
		$Table = $InputObject.Tables[0]
	}
	else
	{
		if (-not $RetainColumns -or $Table.Columns.Count -eq 0)
		{
			#Clear out the Table Contents
			$Table.Clear()
			
			if ($null -eq $InputObject) { return } #Empty Data
			
			$object = $null
			#find the first non null value
			foreach ($item in $InputObject)
			{
				if ($null -ne $item)
				{
					$object = $item
					break
				}
			}
			
			if ($null -eq $object) { return } #All null then empty
			
			#Get all the properties in order to create the columns
			foreach ($prop in $object.PSObject.Get_Properties())
			{
				if (-not $FilterWMIProperties -or -not $prop.Name.StartsWith('__')) #filter out WMI properties
				{
					#Get the type from the Definition string
					$type = $null
					
					if ($null -ne $prop.Value)
					{
						try { $type = $prop.Value.GetType() }
						catch { Out-Null }
					}
					
					if ($null -ne $type) # -and [System.Type]::GetTypeCode($type) -ne 'Object')
					{
						[void]$table.Columns.Add($prop.Name, $type)
					}
					else #Type info not found
					{
						[void]$table.Columns.Add($prop.Name)
					}
				}
			}
			
			if ($object -is [System.Data.DataRow])
			{
				foreach ($item in $InputObject)
				{
					$Table.Rows.Add($item)
				}
				return @( ,$Table)
			}
		}
		else
		{
			$Table.Rows.Clear()
		}
		
		foreach ($item in $InputObject)
		{
			$row = $table.NewRow()
			
			if ($item)
			{
				foreach ($prop in $item.PSObject.Get_Properties())
				{
					if ($table.Columns.Contains($prop.Name))
					{
						$row.Item($prop.Name) = $prop.Value
					}
				}
			}
			[void]$table.Rows.Add($row)
		}
	}
	
	return @(,$Table)	
}
#endregion

$shadowToolStripMenuItem_Click={
	#TODO: Place custom script here
	
	$sessionHost = $datagridview1.CurrentRow.Cells["HostServer"].Value.ToString()
	$ID = $datagridview1.CurrentRow.Cells["SessionID"].Value.ToString()
	
	
	$arguments = "/v:$($sessionHost) /shadow:$($ID) /control /noConsentPrompt /public"
	start-process mstsc.exe -ArgumentList $arguments
	
}

$kickToolStripMenuItem_Click={
	#TODO: Place custom script here
	
	$sessionHost = $datagridview1.CurrentRow.Cells["HostServer"].Value.ToString()
	$ID = $datagridview1.CurrentRow.Cells["SessionID"].Value.ToString()
	
	Invoke-RDUserLogoff -HostServer $sessionHost -UnifiedSessionID $ID -Force
}
]]></Code>
  <Mode>0</Mode>
  <Assemblies>
    <Assembly>mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</Assembly>
    <Assembly>System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.DirectoryServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</Assembly>
  </Assemblies>
</File>